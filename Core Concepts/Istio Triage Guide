# Istio Triage Guide

## Functional Components
| Component Name | Responsibilities | Platform | Sample Configuration |
| ------ | ------ | ------ | ------ |
| IstioD | IstioD provides service discovery, configuration and certificate management| Control plane/ Data plane | NA |
Istio Ingress Gateway | A loadbalancer (Standalone Envoy Proxy) operating at the edge of the mesh that receives incoming HTTPS/TCP traffics | Control Plane | NA |
Gateway | Gateway sits at the edge of the mesh and receives all the incoming connections on the behalf of the PODs. The Istio Ingress Gateway also provide option of _SSL Termination_ at the Gateway level.Terminating SSL connection at the Gateway level helps in offloading the computing task to decrypt traffic from the application leve, which improves apllication performance. PostSSL termination at the Gateway, traffic will be encrypted and decrypted back again using Istio mTLS capabilities. For Service to Service authentication as well, Istio mTLS ensures traffic is encrypted on transit between services and CITADEL in control plane, and it is responsible for issuing and managing certificates. make sure to use only one Gateway for one namespace to avoid the Internal Server Errors | Control Plane | [GW]() |
Virtual Service and Destination Rule | While the VirualService defines configuration affecting the traffic routing, a DestinationRule defines policies that apply to traffic intended for a service after routing has occured. The resources are tightly linked, and first DestinationRules will be applied before updating VirtualService so as to avoid unintentional traffic flow. For instance, when introducing a newer version of service, define the DestinationRule subset with rules for whatwill reach that service before introducing the VirtualService to route traffic to it. | Control Plane | [VS]() |

